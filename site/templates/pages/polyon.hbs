---
basename: casestudy
layout: default
title: Polyon
logo: logo-polyon.svg
description:
tags: svg animation
categories: client
url: http://polyon.co
project: SVG Animation
summary: We Dream Big and Build Things
---

<!-- 	Jonno Riekwel of Polyon enthusiastically approached Gray Ghost Visuals with a vision to develop and construct a vector animation sequence involving the Polyon logo wonderfully crafted by Jord Riekwel. Polyon requested that each polygon element animate indenpendently and in a staggered fashion in a desired sequence.  -->

{{> logo-polyon}}

<h2 class="ggv-headline _reverse"><span>Animated</span><span>Polylion</span></h2>

<ul class="ggv-list">
	<li><b>Project:</b> {{project}}</li>
	<li><b>Website:</b> <a href="{{url}}">{{url}}</a></li>
	<li><b>Languages:</b> HTML, XML, Sass, CoffeeScript</li>
	<li><b>Libraries:</b> jQuery, TweenMax</li>
	<li><b>Tooling:</b> Adobe Illustrator, Grunt, Git</li>
</ul>

<h3>About {{title}}</h3>
<p>Polyon believes we can all do the thing that we love and get paid for it. They help businesses to build their dream apps and find the right people who have the same dreams to collaborate. They have ideas coming out of their ears.</p>

<h3>Research</h3>
<p>Jonno Riekwel of Polyon envisioned a simplistic set of motions with fine grain control for his companies logo crafted <a href="http://www.larkef.com">Jord Riekwel</a>. It was requested that each polygon element animate independently in a controlled sequence. The challenge was accepted and the result was spectacular.</p>
<p>It was unclear how the motion would take place and sparked an ongoing research and discovery session searching for the answers. How to accomplish this task and what challenges would be faced was the goal. We began with a demo on CodePen of the lion below to test out theories and their results in the browser.</p>
<figure class="figure-site">
	<p data-height="322" data-theme-id="24353" data-slug-hash="RNLgJP" data-default-tab="html,result" data-user="grayghostvisuals" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/grayghostvisuals/pen/RNLgJP/">SVG Low PolyLion: Animated Polygons</a> by GRAY GHOST (<a href="http://codepen.io/grayghostvisuals">@grayghostvisuals</a>) on <a href="http://codepen.io">CodePen</a>.</p>
	<figcaption><small>The Initial Polylion used as discovery. View the live demo on <a href="http://codepen.io/grayghostvisuals/pen/radeqX">CodePen</a></small></figcaption>
</figure>

<p>Orignally posted on Dribbble by <a href="https://dribbble.com/shots/1587932-Ble-n-Poly-Lion">Breno Bitencourt</a>, the illustration was used for studying capabilities of each polygon moving independently using the GreenSock Animation Platform (GSAP).</p>
<p>The demo proved it's worth in mountains of feedback and community support. The knowledge gained internally was priceless before moving on to the actual piece; Polyon's logo.</p>

<div class="clearfix">
	<figure class="figure-txt">
		<img src="{{site.imgdir}}clients/polyon/polyon-ai.png" alt="">
	</figure>

	<div class="text">
		<h3>Leave No Traces</h3>
		<p>The original vector logo was cleaned from top to bottom ensuring by hand that each polygon element meticulously lined up to itâ€™s adjacent and adjoining counterpart. Hours of work were invested to ensure each polygon rest prcisely on a pixel grid. The result is a crisp and beautiful polygon lion that helped push the boundaries of SVG and it's use on the Web.</p>
	</div>
</div>

<h3>Challenges</h3>
<p>In the initial researching phases I found CSS to be very difficult in terms of fine-grain control compared to a library such as GreenSock and the one we chose for the final implementation. Since this type of library is geared towards JavaScript controlled animations, keyframes can be controlled and executed independently. As the project evolved each polygon element would allow for independent movement while being presented in a particular sequence.</p>
<figure>
	<img src="{{site.imgdir}}clients/polyon/polyon-stroke.png" alt="">
</figure>

<p>When viewed in the browser the lion displayed some anti-aliaising issues leaving roughly a 1px gap between each polygon element. To avoid this problem a stroke width of 2.5px and a stroke color to match each corresponding polygon element was used. This helped to alleviate the anti-aliasing issues slightly, but still not entirely. A guest post article for CSS-Tricks produced plenty of smart suggestions from the community about using SVG filters instead of strokes and contributed to the final result.</p>

<h3>Results</h3>
<p>The final result is gorgeous and attractive. The cherry on top is the hidden easter egg for hover animations that Polyon asked as a last minute add on. The outcome is captivating.</p>
<figure class="figure-site">
	<img src="{{site.imgdir}}clients/polyon/polyonlion-hover.gif" alt="">
	<figcaption><small>View the live demo on <a href="http://codepen.io/grayghostvisuals/pen/radeqX">CodePen</a></small></figcaption>
</figure>

<h3>Noteworthy</h3>
<p>The project was picked up as a guest article with <a href="https://css-tricks.com/polylion">CSS-Tricks</a> due to an earlier demo previously discussed exploring the polygon lion. An invitation was also extended to the <a href="http://environmentsforhumans.com/2015/css-summit">CSS Summit</a> where a talk was given on creating and animating SVG polygons. That slide presentation can be seen more in-depth at <a href="http://slides.com/grayghostvisuals/svgpolygons">http://slides.com/grayghostvisuals/svgpolygons</a>. The talk was also given to the San Francisico CodePen meetup held at the Trulia headquarters.</p>
