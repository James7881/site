@font-face {
  font-family: "Avenir LT W01_35 Light";
  src: url(http://static.grayghostvisuals.com/fonts/3511a780-31ca-4ee1-9083-89b1b7185748.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/3511a780-31ca-4ee1-9083-89b1b7185748.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/4fb9056b-4ac3-488b-9bac-75741b0ff0bd.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/c4352a95-7a41-48c1-83ce-d8ffd2a3b118.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/3e419b5b-c789-488d-84cf-a64009cc308e.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/ca038835-1be3-4dc5-ba25-be1df6121499.svg#ca038835-1be3-4dc5-ba25-be1df6121499) format("svg");
}

@font-face {
  font-family: "Avenir LT W01_45 Book";
  src: url(http://static.grayghostvisuals.com/fonts/4f32268f-fd86-4960-b72c-4bb1ba75ec6f.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/4f32268f-fd86-4960-b72c-4bb1ba75ec6f.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/9bcb625d-81de-48c2-ba0c-664558d197e3.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/939cba03-5b40-4d01-9bc5-7589eca863db.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/849bc5b9-a2ff-4343-977b-26ba8bd24a60.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/f67fa3b5-c1d1-488f-8e60-a828b9ad56a4.svg#f67fa3b5-c1d1-488f-8e60-a828b9ad56a4) format("svg");
}

@font-face {
  font-family: "AvenirLTW01-45BookObliq";
  src: url(http://static.grayghostvisuals.com/fonts/acc13cdc-338a-43e6-a156-e54a4c87582d.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/acc13cdc-338a-43e6-a156-e54a4c87582d.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/70ed6fd5-9adf-4d08-8b30-514af1de7ca2.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/ca94ed56-18fc-4856-940a-70a072607c7c.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/dd6da407-70fe-4aa3-a1c7-64f0cb086f01.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/c7f424be-90e1-45b8-b617-ee3589a859bd.svg#c7f424be-90e1-45b8-b617-ee3589a859bd) format("svg");
}

@font-face {
  font-family: "Avenir LT W01_65 Medium";
  src: url(http://static.grayghostvisuals.com/fonts/212ab03d-5db2-4d6a-b94c-171cc702aa51.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/212ab03d-5db2-4d6a-b94c-171cc702aa51.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/e4d36745-a861-4a49-aa17-6510e67429d3.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/2cac77ec-9bc0-4ee7-87e4-27650190744f.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/aaf11848-aac2-4d09-9a9c-aac5ff7b8ff4.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/294099f3-8d00-4676-afc5-5e9d8d43ad69.svg#294099f3-8d00-4676-afc5-5e9d8d43ad69) format("svg");
}

@font-face {
  font-family: "AvenirLTW01-65MediumObl";
  src: url(http://static.grayghostvisuals.com/fonts/2a6f81a2-475c-4831-9949-33d7748ee561.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/2a6f81a2-475c-4831-9949-33d7748ee561.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/695a9fa5-9f57-4800-9993-3684d520f107.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/e0af2f49-a399-482b-a54e-d745e268ec80.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/6803d3dd-2107-45fc-ac8a-a4fa13771547.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/1bb1acb5-8d4e-4800-88af-dbcf1fe96ef8.svg#1bb1acb5-8d4e-4800-88af-dbcf1fe96ef8) format("svg");
}

@font-face {
  font-family: "Ciutadella W04 Lt";
  src: url(http://static.grayghostvisuals.com/fonts/4daeaa7d-f7fb-47c6-a8e7-c077e372e184.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/4daeaa7d-f7fb-47c6-a8e7-c077e372e184.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/d1cabf8f-280c-4998-9463-ecac69b4a97d.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/10451487-1f0d-48e9-9c47-1a263b7c2ca5.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/afae55b3-a505-4aba-b04e-15b52f5e87ed.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/148856b7-f6c2-4488-aa9e-64b4aabd523d.svg#148856b7-f6c2-4488-aa9e-64b4aabd523d) format("svg");
}

@font-face {
  font-family: "Ciutadella W04 Medium";
  src: url(http://static.grayghostvisuals.com/fonts/7bdd0be0-f361-4d36-9e14-05337303f255.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/7bdd0be0-f361-4d36-9e14-05337303f255.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/ed194b8a-64f3-48d2-bddf-92263193203f.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/37b97c80-647a-4123-b7ee-7bd3701ba68a.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/5a50bc44-892b-4ab3-8b7b-f652b48ee431.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/e232f02f-57b5-48ae-951e-b3117b3d91de.svg#e232f02f-57b5-48ae-951e-b3117b3d91de) format("svg");
}

@font-face {
  font-family: "Ciutadella W04 SmBold";
  src: url(http://static.grayghostvisuals.com/fonts/829adf53-a18c-4a54-9cd3-dd894a8634a9.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/829adf53-a18c-4a54-9cd3-dd894a8634a9.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/7b38e6b6-d5db-412d-b147-145b5840d624.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/9ed1d093-f7c8-4fe8-965f-be965fe3f50e.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/0a464e3c-b811-4aa2-b3ef-42877f0913d7.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/bf4747b0-2500-4f42-b2d3-9df1d7175e3e.svg#bf4747b0-2500-4f42-b2d3-9df1d7175e3e) format("svg");
}

@font-face {
  font-family: "Ciutadella W04 Bold";
  src: url(http://static.grayghostvisuals.com/fonts/74b4dd68-6d32-47cc-84de-23e5a5ed0b33.eot?#iefix);
  src: url(http://static.grayghostvisuals.com/fonts/74b4dd68-6d32-47cc-84de-23e5a5ed0b33.eot?#iefix) format("eot"), url(http://static.grayghostvisuals.com/fonts/20db9fd0-d6d6-445c-ae1f-b2a89f76eef7.woff2) format("woff2"), url(http://static.grayghostvisuals.com/fonts/032894d3-2aab-40ca-bbef-651cdc9cd972.woff) format("woff"), url(http://static.grayghostvisuals.com/fonts/dfe36cb7-94ef-477f-981c-25cf8e6a1452.ttf) format("truetype"), url(http://static.grayghostvisuals.com/fonts/9dd50792-6387-4112-9787-40456e7bafbc.svg#9dd50792-6387-4112-9787-40456e7bafbc) format("svg");
}

*:before, *:after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  background: #F4F5F6;
}

html,
body {
  height: 100%;
}

html,
body {
  margin: 0;
  padding: 0;
  min-height: 100%;
}

body {
  animation: fadein 300ms cubic-bezier(0.57, 0.25, 0.65, 1) 1 0.5s forwards;
  color: #003461;
  opacity: 0;
}

.ffo-loaded body {
  font-family: 'Avenir LT W01_45 Book';
}

img,
embed,
object,
video {
  max-width: 100%;
  height: auto;
}

svg {
  max-width: 100%;
}

a {
  transition: 200ms all cubic-bezier(0.645, 0.045, 0.355, 1);
  text-decoration: none;
}

a:link, a:visited {
  color: #EB8315;
}

a:focus, a:hover, a:active {
  font-weight: inherit;
  color: #AF5C1E;
}

abbr[title] {
  border-bottom: none;
  text-decoration: none;
}

figcaption {
  text-align: center;
}

h1 {
  text-transform: uppercase;
  color: #132e49;
}

.ffo-loaded h1 {
  font-family: 'Ciutadella W04 Medium';
}

h2 {
  text-transform: uppercase;
  color: #132e49;
}

.ffo-loaded h2 {
  font-family: 'Ciutadella W04 Medium';
}

h3 {
  text-transform: uppercase;
  color: #132e49;
}

.ffo-loaded h3 {
  font-family: 'Ciutadella W04 Medium';
}

h4 {
  text-transform: uppercase;
  color: #132e49;
}

.ffo-loaded h4 {
  font-family: 'Ciutadella W04 Medium';
}

h5 {
  text-transform: uppercase;
  color: #132e49;
}

.ffo-loaded h5 {
  font-family: 'Ciutadella W04 Medium';
}

h6 {
  text-transform: uppercase;
  color: #132e49;
}

.ffo-loaded h6 {
  font-family: 'Ciutadella W04 Medium';
}

code[class*="language-"],
pre[class*="language-"] {
  color: #CFD7E0;
  direction: ltr;
  font-family: Consolas, Monaco, 'Andale Mono', monospace;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  line-height: 1.5;
  -moz-tab-size: 2;
  tab-size: 2;
  -webkit-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

pre[class*="language-"],
:not(pre) > code[class*="language-"] {
  background: #003461;
}

pre[class*="language-"] {
  margin: 1em 0;
  overflow: auto;
  padding: 1em;
}

pre[class*="language-"]::-moz-selection {
  background: #103141;
}

pre[class*="language-"]::selection {
  background: #103141;
}

pre[class*="language-"]::-moz-selection {
  background: #103141;
}

pre[class*="language-"]::selection {
  background: #103141;
}

pre[class*="language-"]::-moz-selection, pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection, code[class*="language-"] ::-moz-selection {
  text-shadow: none;
  background: rgba(91, 95, 124, 0.15);
}

pre[class*="language-"]::-moz-selection,
pre[class*="language-"] ::-moz-selection,
code[class*="language-"]::-moz-selection,
code[class*="language-"] ::-moz-selection {
  text-shadow: none;
  background: rgba(91, 95, 124, 0.15);
}

pre[class*="language-"]::selection,
pre[class*="language-"] ::selection,
code[class*="language-"]::selection,
code[class*="language-"] ::selection {
  text-shadow: none;
  background: rgba(91, 95, 124, 0.15);
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: #5a6187;
}

.token.punctuation {
  opacity: .7;
}

.namespace {
  opacity: .7;
}

.token.tag,
.token.boolean,
.token.number,
.token.deleted {
  color: #E87878;
}

.token.keyword,
.token.property,
.token.selector,
.token.constant,
.token.symbol,
.token.builtin {
  color: #EF3738;
}

.token.attr-name,
.token.attr-value,
.token.string,
.token.char,
.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable,
.token.inserted {
  color: #92A6FF;
}

.token.punctuation {
  color: #ABAACB;
}

.token.attr-value > .token.punctuation:first-child {
  color: #EF7379;
}

.token.atrule {
  color: #7386a5;
}

.token.regex,
.token.important {
  color: #e9c163;
}

.token.important {
  font-weight: bold;
}

.token.entity {
  cursor: help;
}

pre[data-line] {
  padding: 1em 0 1em 3em;
  position: relative;
}

.language-markup .token.tag,
.language-markup .token.attr-name,
.language-markup .token.punctuation {
  color: #278BD2;
}

.token {
  position: relative;
  z-index: 1;
}

pre[class*='language-'] {
  position: relative;
  clear: both;
  margin: 20px 0;
  z-index: -1;
}

pre[class*='language-'] > code[data-language] {
  display: block;
}

pre[class*='language-'] > code[data-language]::before {
  content: attr(data-language);
  color: black;
  background-color: #CFCFCF;
  display: inline-block;
  position: absolute;
  top: 0;
  right: 0;
  font-size: 0.9em;
  padding: 0 0.5em;
  text-shadow: none;
}

/* ==========================================================================
   Normalize.scss settings
   ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7
 */
/* Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active, a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Addresses styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.5;
}

body.atomic main[role="main"] .row {
  margin: 40px 0 60px;
  margin: 0 auto;
  max-width: 960px;
  padding: 20px;
}

#atomic-logo {
  height: auto;
  display: inline-block;
  vertical-align: middle;
  margin-right: 20px;
}

#atomic-logo path {
  fill: none;
  stroke: #012265;
}

#atomic-logo circle {
  fill: #F4F5F6;
  stroke: #09A3CA;
}

.atomic-hexoverlay._active {
  transform: translateX(0) translateZ(0);
  opacity: 1;
}

.atomic-hexoverlay {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-direction: column;
  flex-direction: column;
  transform: translateX(-100%) translateZ(0);
  transition: all 500ms cubic-bezier(0.77, 0, 0.175, 1);
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  z-index: 500;
  opacity: 0;
}

.atomic-hexoverlay p {
  margin: 0;
  font-size: 3.25rem;
}

.atomic-hexoverlay b {
  display: inline-block;
  padding: 10px 0;
  width: 100%;
  text-align: center;
  text-transform: lowercase;
}

.atomic-guide .intro-deck {
  padding: 80px 0;
}

.atomic-logos svg {
  height: 140px;
  width: 120px;
}

.atomic-logos svg:not(:last-child) {
  margin-right: 20px;
}

.ggv-graphic:not(:last-child) {
  margin-right: 40px;
}

footer[role="contentinfo"] {
  padding-top: 50px;
  padding-bottom: 100px;
  width: 100%;
  text-align: center;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
}

footer[role="contentinfo"] small {
  text-transform: uppercase;
  color: #969DFF;
  font-family: 'Ciutadella W04 SmBold';
}

#colors svg {
  max-width: 100%;
  width: 72px;
  height: 72px;
  transition: 200ms fill ease-in-out;
}

#colors svg:hover {
  cursor: pointer;
}

#colors svg:nth-of-type(1) {
  fill: #FFFFFF;
}

#colors svg:nth-of-type(2) {
  fill: #F4F5F6;
}

#colors svg:nth-of-type(3) {
  fill: #EEEEEE;
}

#colors svg:nth-of-type(4) {
  fill: #9ACAE5;
}

#colors svg:nth-of-type(5) {
  fill: #09A3CA;
}

#colors svg:nth-of-type(6) {
  fill: #006EA0;
}

#colors svg:nth-of-type(7) {
  fill: #003461;
}

#colors svg:nth-of-type(8) {
  fill: #F7AB00;
}

#colors svg:nth-of-type(9) {
  fill: #EB8315;
}

#colors svg:nth-of-type(10) {
  fill: #FFDD00;
}

@keyframes fadein {
  to {
    opacity: 1;
  }
}

@keyframes expand {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

.list-reset {
  list-style-type: none;
  margin: 0;
  padding-left: 0;
}

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

.clearfix::after {
  content: " ";
  display: block;
  clear: both;
}

@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: " (" attr(href) ")";
  }
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: "";
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  @page {
    margin: 0.5cm;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}

.ggv-cards {
  display: -ms-flexbox;
  display: flex;
  max-width: 1181px;
  margin: 0 auto;
}

.ggv-cards > div {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: baseline;
  align-items: baseline;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -ms-flex: 1;
  flex: 1;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 20px;
}

.ggv-cards > div h4 {
  margin-bottom: 10px;
  -ms-flex: 100%;
  flex: 100%;
  font-size: 24px;
  text-align: center;
}

.ggv-datalist {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  background: #F4F5F6;
}

.ggv-datalist__fig {
  margin: auto;
  max-width: 100px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  transition: 240ms all cubic-bezier(0.645, 0.045, 0.355, 1);
  text-align: center;
  opacity: 1;
}

.ggv-datalist__item.staple-web .ggv-datalist__fig {
  max-width: 200px;
}

.ggv-datalist__item.diy .ggv-datalist__fig,
.ggv-datalist__item.walmedia .ggv-datalist__fig {
  width: 200px;
}

.ggv-datalist__item {
  animation: 700ms cubic-bezier(0.55, 0.055, 0.675, 0.19) 0s expand;
  height: 320px;
  position: relative;
  transform-origin: center center;
  width: 100%;
  color: white;
}

.ggv-datalist__item::after {
  content: 'read more';
  padding: 20px 0;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  z-index: 0;
  text-align: center;
  text-transform: uppercase;
  font-family: "Ciutadella W04 SmBold";
}

.ggv-datalist__item a {
  display: block;
  height: 100%;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  transition: 300ms all cubic-bezier(0.645, 0.045, 0.355, 1);
  width: 50%;
  z-index: 1;
  color: white;
}

.ggv-datalist__item a:hover, .ggv-datalist__item a:focus {
  outline: none;
}

.ggv-datalist__item a:hover img, .ggv-datalist__item a:focus img {
  opacity: 0.1;
}

.ggv-datalist__item a:hover div, .ggv-datalist__item a:focus div {
  opacity: 1;
  transform: scale(1);
}

.ggv-datalist__item-data {
  display: inline-block;
  margin: auto;
  padding-top: 10px;
  padding-bottom: 10px;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  z-index: 1;
  font-family: "Ciutadella W04 Lt";
  font-size: 0.875rem;
  font-weight: 100;
  text-align: center;
  text-transform: uppercase;
}

.ggv-datalist__item.theron img,
.ggv-datalist__item.murmuration-malts img {
  max-width: 100%;
  width: 200px;
}

.ggv-datalist__item.lean-labs img {
  max-width: 100%;
  width: 220px;
  transform: translateZ(0);
}

.ggv-summary {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  height: 100%;
  transition: 240ms all cubic-bezier(0.645, 0.045, 0.355, 1);
  transform-origin: center center;
  transform: scale(0);
  font-size: 1rem;
  opacity: 0;
}

.ggv-summary > * {
  margin: 0;
  text-align: center;
  color: white;
}

.ggv-summary__title {
  font-size: 1.625em;
}

.ggv-summary__desc {
  text-transform: capitalize;
}

.ggv-datalist--clients .ggv-datalist__item:nth-child(1) {
  animation-delay: 0.0675s;
}

.ggv-datalist--clients .ggv-datalist__item:nth-child(2) {
  animation-delay: 0.135s;
}

.ggv-datalist--clients .ggv-datalist__item:nth-child(3) {
  animation-delay: 0.2025s;
}

.ggv-datalist--clients .ggv-datalist__item:nth-child(4) {
  animation-delay: 0.27s;
}

.ggv-datalist--clients .ggv-datalist__item:nth-child(5) {
  animation-delay: 0.3375s;
}

.ggv-datalist--clients .ggv-datalist__item:nth-child(6) {
  animation-delay: 0.405s;
}

.ggv-datalist--clients .ggv-datalist__item:nth-child(7) {
  animation-delay: 0.4725s;
}

.ggv-datalist--clients .ggv-datalist__item:nth-child(8) {
  animation-delay: 0.54s;
}

.ggv-datalist__item.diy {
  background: #4B56AC;
  background-size: cover;
  color: white;
}

.ggv-datalist__item.murmuration-malts {
  background: #E2C454;
  background-size: cover;
  color: white;
}

.ggv-datalist__item.polyon {
  background: #060E17 url("../img/site/clients/polyon/space.jpg") top left no-repeat;
  background-size: cover;
  color: white;
}

.ggv-datalist__item.staple-web {
  background: #cc431f;
  background-size: cover;
  color: white;
}

.ggv-datalist__item.theron {
  background: #161819;
  background-size: cover;
  color: white;
}

.ggv-datalist__item.tracks {
  background: #5D5D7D;
  background-size: cover;
  color: white;
}

.ggv-datalist__item.walmedia {
  background: #1B2D33;
  background-size: cover;
  color: white;
}

.ggv-datalist__item.lean-labs {
  background: #313543;
  background-size: cover;
  color: white;
}

.google-expando {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.google-expando--wrap {
  position: relative;
  width: 100%;
}

.google-expando__icon {
  border-radius: 90%;
  box-shadow: 0 1px 1.5px rgba(0, 0, 0, 0.12), 0 1px 1px rgba(0, 0, 0, 0.24);
  height: 24px;
  padding: 5px;
  transition: 0.2s all cubic-bezier(0.4, 0, 0.2, 1);
  width: 24px;
  z-index: 2;
  text-align: center;
  background: #387EAC;
  color: white;
}

.google-expando__icon:hover {
  cursor: pointer;
  background: #09A3CA;
}

.google-expando__icon svg {
  height: 24px;
  vertical-align: center;
  width: 24px;
  fill: white;
}

.google-expando__card {
  border-radius: 2px;
  box-shadow: 0 1px 1.5px rgba(0, 0, 0, 0.12), 0 1px 1px rgba(0, 0, 0, 0.24);
  height: auto;
  max-width: 100%;
  margin: 0 auto;
  padding: 28px;
  position: absolute;
  top: 16px;
  left: 0;
  right: 0;
  transform: scale(0) translateZ(0);
  transition: 0.2s all cubic-bezier(0.4, 0, 0.2, 1);
  transform-origin: top center;
  z-index: 1;
  background: white;
  color: black;
  opacity: 0;
}

.google-expando__icon.active {
  transform: rotate(45deg);
}

.google-expando__card.active {
  transform: scale(1) translateZ(0);
  opacity: 1;
}

html:not(.polyon):not(.theron):not(.walmedia) .figure-site img,
html:not(.polyon):not(.theron):not(.walmedia) .figure-site iframe {
  box-shadow: 0 -1px 1px rgba(254, 254, 254, 0.12), 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

footer[role="contentinfo"] {
  padding-top: 80px;
  padding-bottom: 10px;
  width: 100%;
  text-align: center;
}

footer[role="contentinfo"] small {
  text-transform: uppercase;
}

footer[role="contentinfo"] small a {
  color: inherit;
}

html:not(.case):not(.atomic-guide) header[role="banner"] {
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.16);
}

html:not(.case) header[role="banner"] {
  width: 100%;
  z-index: 2;
  background: #F4F5F6;
}

@media screen and (min-width: 740px) {
  html:not(.case) header[role="banner"] {
    -ms-flex-align: center;
    align-items: center;
    -ms-flex-pack: center;
    justify-content: center;
    display: -ms-flexbox;
    display: flex;
    padding-top: 90px;
    padding-bottom: 20px;
  }
}

html:not(.case) header[role="banner"] a[href="/"] {
  display: inherit;
  width: 100%;
  text-align: center;
  padding-top: 10px;
}

@media screen and (min-width: 740px) {
  html:not(.case) header[role="banner"] a[href="/"] {
    display: inline-block;
    position: absolute;
    top: 0;
    right: 0;
    z-index: 2;
  }
}

html:not(.case) header[role="banner"] a[href="/"] svg {
  filter: drop-shadow(-1px -1px 2px rgba(0, 0, 0, 0.1)) drop-shadow(1px 2px 2px rgba(0, 0, 0, 0.15));
  width: 60px;
  height: 60px;
}

@media screen and (min-width: 460px) {
  html:not(.case) header[role="banner"] a[href="/"] svg {
    width: 80px;
    height: 80px;
  }
}

.intro-deck {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
  z-index: 0;
  font-size: 18px;
  background-color: #003461;
  background-image: url("../img/site/poly-sky-opaque.png");
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: cover;
  color: white;
}

.intro-deck__wrap {
  max-width: 560px;
  margin: auto;
}

.intro-deck canvas {
  position: absolute;
  bottom: 0;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  z-index: -1;
  opacity: 0.7;
}

.intro-deck h3 {
  font-size: 54px;
  line-height: 0;
  text-align: center;
  color: white;
}

.material-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  box-sizing: border-box;
  border-radius: 2px;
  box-shadow: inset 1px 1px 1px rgba(255, 255, 255, 0.3), 0 1px 1.5px rgba(0, 0, 0, 0.15), 0 1px 1px rgba(0, 0, 0, 0.2);
  display: inline-block;
  text-align: center;
  max-width: 500px;
  padding: 1rem;
  position: relative;
  transition: 250ms all cubic-bezier(0.4, 0, 0.2, 1);
  width: 100%;
  font-family: 'Ciutadella W04 SmBold';
  text-transform: uppercase;
}

.material-button:link, .material-button:visited {
  background: #19547b;
  color: white;
}

.material-button:focus, .material-button:hover, .material-button:active {
  cursor: pointer;
  outline: none;
  background: #4A89B1;
}

.material-ripple {
  height: 100%;
  pointer-events: none;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 0;
  fill: #76BFF4;
}

.material-ripple use {
  opacity: 0;
}

.pub-logo {
  width: 120px;
  height: 48px;
}

.ggv-publist {
  list-style-type: none;
  display: -ms-flexbox;
  display: flex;
  padding-left: 0;
}

.ggv-slogan p {
  color: white;
}

html:not(.case) nav[role="navigation"] {
  padding-top: 10px;
  width: 100%;
  font-size: 16px;
  text-align: center;
}

html:not(.case) nav[role="navigation"] a {
  margin: 10px;
  padding: 5px 0;
  text-decoration: none;
  text-transform: uppercase;
  color: #76bff4;
}

html:not(.case) nav[role="navigation"] a:visited {
  color: #76bff4;
}

html:not(.case) nav[role="navigation"] a:hover, html:not(.case) nav[role="navigation"] a:focus, html:not(.case) nav[role="navigation"] a:active, html:not(.case) nav[role="navigation"] a.active {
  font-weight: inherit;
  color: #4380A7;
}

.ffo-loaded html:not(.case) nav[role="navigation"] {
  font-family: 'Ciutadella W04 SmBold';
  font-size: 16px;
}

.quotator {
  position: relative;
  width: 100%;
  min-height: 180px;
  max-width: 640px;
  margin: 0 auto;
}

.quotator img {
  border-radius: 80%;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  display: block;
  width: 64px;
  margin: auto;
}

.quote {
  position: absolute;
  top: 0;
  left: 0;
  transform: rotate3d(100, -1, 1, 90deg);
  transition-duration: 800ms;
  transition-timing-function: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  transition-property: transform, opacity;
  opacity: 0;
}

.quote.js-current {
  transform: rotate3d(1, 1, 1, 0);
  opacity: 1;
}

.quotator {
  position: relative;
  min-height: 180px;
}

.quotator figure {
  margin: 0;
  padding: 0 20px;
}

.quotator cite {
  font-size: 110%;
  font-style: normal;
}

.quotator cite small {
  display: inline-block;
  margin-top: 10px;
}

.quotator blockquote {
  padding: 0;
  margin: 0;
}

.quotator blockquote p {
  margin-top: 0;
}

.socials {
  height: 48px;
  margin: auto;
  margin-bottom: 60px;
  position: relative;
  width: 48px;
}

.socials svg#trigger {
  height: 48px;
  position: relative;
  z-index: 2;
}

.socials svg#trigger,
.socials a {
  width: 48px;
}

.socials svg#trigger,
.socials svg#trigger path,
.socials svg path {
  fill: #4BBAFB;
}

.socials a {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-pack: start;
  justify-content: flex-start;
  height: 60px;
  position: absolute;
  top: 50%;
  left: 0;
  transition: 900ms all cubic-bezier(0.68, -0.55, 0.265, 1.55);
  transform-origin: top center;
  z-index: 0;
  opacity: 0;
}

.socials a:hover {
  cursor: pointer;
}

.socials a:hover svg path {
  fill: #003461;
}

.socials svg {
  transform: rotate(-180deg);
}

.socials svg#trigger {
  transform: rotate(0deg) scale(0.875);
}

.socials svg#github {
  transform: rotate(-90deg);
}

.socials svg#dribble {
  transform: rotate(90deg);
}

.socials a {
  opacity: 1;
  padding-top: 50%;
  z-index: 0;
}

.socials a:nth-of-type(1) {
  transform: rotate(90deg);
  transition-delay: 36ms;
}

.socials a:nth-of-type(2) {
  transform: rotate(180deg);
  transition-delay: 72ms;
}

.socials a:nth-of-type(3) {
  transform: rotate(270deg);
  transition-delay: 108ms;
}

.socials a:nth-of-type(4) {
  transform: rotate(360deg);
  transition-delay: 144ms;
}

.socials a:nth-of-type(5) {
  transform: rotate(450deg);
  transition-delay: 180ms;
}

.ggv-graphic {
  height: 192px;
  max-width: 100%;
  width: 172px;
}

.ggv-graphic:not(:root) {
  overflow: visible;
}

html {
  font: normal 100%/1.5 sans-serif;
}

.ffo-loaded nav[role="navigation"] {
  font-family: 'Ciutadella W04 SmBold';
}

.ffo-loaded footer[role="contentinfo"] small {
  font-family: 'Ciutadella W04 SmBold';
}

/*# sourceMappingURL=data:application/json;base64, */